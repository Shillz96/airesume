Masthead Theme Concept: "Cosmic Navigator"
Concept Overview
The "Cosmic Navigator" theme draws inspiration from a futuristic, space-like aesthetic, aligning with the AI-driven nature of AIreHire. The masthead will feature a sleek, dark gradient background (using the provided jobFinderBackground), with neon accents (derived from primary: hsl(221.2 83.2% 53.3%)) for a modern, techy vibe. The tabs (Dashboard, Resume Builder, Job Finder) will have a glowing, hover-activated effect, with a subtle "cosmic trail" animation using GSAP to give the impression of a spaceship navigating through a starry sky. The overall look will remain professional by maintaining clean typography, minimalistic design, and a focus on usability.
Key Features
Gradient Background with Subtle Starfield Animation:
Use the jobFinderBackground gradient (linear-gradient(to bottom right, hsl(219, 90%, 10%), hsl(260, 90%, 10%))) as the base.

Add a subtle starfield effect (small, twinkling dots) using CSS animations to create a cosmic feel.
Glowing Tabs with Cosmic Trail Effect:
Tabs will have a neon glow effect on hover, using the primary color (hsl(221.2 83.2% 53.3%)).

When a tab is hovered, a "cosmic trail" (a glowing particle effect) will follow the cursor, created with GSAP.
Professional Typography:
Use a modern sans-serif font (e.g., "Inter" or "Montserrat") for the logo and tabs, ensuring readability and professionalism.
Sleek User Profile Area:
The user profile (currently "JD") will have a circular avatar with a subtle glow effect on hover, maintaining the cosmic theme.
Dark/Light Mode Toggle:
Incorporate the appearance: light setting by adding a toggle button that switches to a light theme (we’ll focus on the dark theme for now, as it aligns with the gradient).
Implementation
1. Set Up the Masthead Structure
We’ll create a Masthead component that includes the logo, navigation tabs, and user profile area. The component will use GSAP for animations and Tailwind CSS for styling (assuming you’re using Tailwind, given the hsl color format).
2. Add GSAP for Tab Effects
We’ll use GSAP to create the cosmic trail effect on tab hover, ensuring the animation is smooth and professional.
3. Style with the Provided Theme
We’ll apply the jobFinderBackground, primary, and highlight colors (resumeHighlight1, resumeHighlight2, resumeHighlight3) to create a cohesive look.
Code Implementation
Here’s the enhanced Masthead component with the "Cosmic Navigator" theme:
jsx
import { useEffect, useRef } from "react";
import { gsap } from "gsap";
import { Link } from "react-router-dom"; // Assuming you're using React Router
import { Moon, Sun } from "lucide-react";
import { Button } from "@/components/ui/button";

// Masthead Component
export default function Masthead({ appearance, toggleAppearance }) {
  const tabsRef = useRef([]);
  const trailRef = useRef(null);

  // GSAP Cosmic Trail Effect
  useEffect(() => {
    tabsRef.current.forEach((tab, index) => {
      tab.addEventListener("mouseenter", (e) => {
        // Create a trail particle
        const trail = document.createElement("div");
        trail.className = "trail-particle";
        document.body.appendChild(trail);

        gsap.to(trail, {
          x: e.clientX,
          y: e.clientY,
          scale: 0,
          opacity: 0,
          duration: 0.5,
          ease: "power2.out",
          onComplete: () => trail.remove(),
        });

        // Glow effect on tab
        gsap.to(tab, {
          boxShadow: "0 0 15px rgba(59, 130, 246, 0.5)",
          duration: 0.3,
        });
      });

      tab.addEventListener("mouseleave", () => {
        gsap.to(tab, {
          boxShadow: "none",
          duration: 0.3,
        });
      });

      tab.addEventListener("mousemove", (e) => {
        const trail = document.createElement("div");
        trail.className = "trail-particle";
        document.body.appendChild(trail);

        gsap.to(trail, {
          x: e.clientX,
          y: e.clientY,
          scale: 0,
          opacity: 0,
          duration: 0.5,
          ease: "power2.out",
          onComplete: () => trail.remove(),
        });
      });
    });
  }, []);

  return (
    <header
      className={`fixed top-0 left-0 w-full z-50 p-4 shadow-lg ${
        appearance === "light"
          ? "bg-white text-gray-900"
          : "bg-gradient-to-br from-[hsl(219,90%,10%)] to-[hsl(260,90%,10%)] text-white"
      }`}
    >
      <div className="max-w-7xl mx-auto flex items-center justify-between">
        {/* Logo */}
        <div className="flex items-center gap-3">
          <h1 className="text-2xl font-bold tracking-tight" style={{ fontFamily: "'Montserrat', sans-serif" }}>
            AIreHire
          </h1>
        </div>

        {/* Navigation Tabs */}
        <nav className="flex gap-6">
          {["Dashboard", "Resume Builder", "Job Finder"].map((tab, index) => (
            <Link
              key={tab}
              to={`/${tab.toLowerCase().replace(" ", "-")}`}
              ref={(el) => (tabsRef.current[index] = el)}
              className="relative px-4 py-2 text-sm font-medium transition-colors duration-300 hover:text-[hsl(221.2,83.2%,53.3%)]"
              style={{ fontFamily: "'Inter', sans-serif" }}
            >
              {tab}
              <span className="absolute inset-x-0 bottom-0 h-0.5 bg-[hsl(221.2,83.2%,53.3%)] transform scale-x-0 origin-left transition-transform duration-300 group-hover:scale-x-100"></span>
            </Link>
          ))}
        </nav>

        {/* User Profile and Theme Toggle */}
        <div className="flex items-center gap-3">
          <Button
            variant="ghost"
            className="p-2 rounded-full hover:bg-[hsl(221.2,83.2%,53.3%)] hover:text-white transition-all"
            onClick={toggleAppearance}
            aria-label={appearance === "light" ? "Switch to dark mode" : "Switch to light mode"}
          >
            {appearance === "light" ? <Moon className="h-5 w-5" /> : <Sun className="h-5 w-5" />}
          </Button>
          <div className="relative group">
            <div className="w-10 h-10 rounded-full bg-[hsl(221.2,83.2%,53.3%)] flex items-center justify-center text-white font-medium transition-all group-hover:shadow-[0_0_10px_rgba(59,130,246,0.5)]">
              JD
            </div>
            <div className="absolute right-0 top-12 hidden group-hover:block bg-[rgba(255,255,255,0.1)] backdrop-blur-md border border-[rgba(255,255,255,0.2)] rounded-lg shadow-lg">
              <ul className="py-2">
                <li className="px-4 py-2 text-sm hover:bg-[hsl(221.2,83.2%,53.3%)] hover:text-white">Profile</li>
                <li className="px-4 py-2 text-sm hover:bg-[hsl(221.2,83.2%,53.3%)] hover:text-white">Settings</li>
                <li className="px-4 py-2 text-sm hover:bg-[hsl(221.2,83.2%,53.3%)] hover:text-white">Logout</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      {/* Starfield Background */}
      <div className="starfield absolute inset-0 pointer-events-none">
        {[...Array(50)].map((_, i) => (
          <div
            key={i}
            className="star absolute bg-white rounded-full"
            style={{
              width: Math.random() * 2 + 1 + "px",
              height: Math.random() * 2 + 1 + "px",
              top: Math.random() * 100 + "%",
              left: Math.random() * 100 + "%",
              animation: `twinkle ${Math.random() * 3 + 2}s infinite`,
            }}
          />
        ))}
      </div>
    </header>
  );
}

CSS for Starfield and Trail Effects
Add these styles globally (e.g., in index.css):
css
.starfield {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.star {
  opacity: 0.7;
}

@keyframes twinkle {
  0%, 100% { opacity: 0.7; }
  50% { opacity: 0.2; }
}

.trail-particle {
  position: absolute;
  width: 5px;
  height: 5px;
  background: hsl(221.2, 83.2%, 53.3%);
  border-radius: 50%;
  box-shadow: 0 0 5px hsl(221.2, 83.2%, 53.3%);
  pointer-events: none;
  opacity: 1;
}

Parent Component to Manage Theme State
Wrap the Masthead in a parent component to manage the appearance state:
jsx
import { useState } from "react";
import Masthead from "@/components/masthead";

export default function App() {
  const [appearance, setAppearance] = useState("light");

  const toggleAppearance = () => {
    setAppearance(appearance === "light" ? "dark" : "light");
  };

  return (
    <div>
      <Masthead appearance={appearance} toggleAppearance={toggleAppearance} />
      {/* Other components */}
    </div>
  );
}

Dependencies
Install GSAP: npm install gsap

Ensure you’re using React Router for navigation (npm install react-router-dom).
