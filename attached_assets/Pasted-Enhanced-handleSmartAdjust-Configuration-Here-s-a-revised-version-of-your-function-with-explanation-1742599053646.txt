Enhanced handleSmartAdjust Configuration
Here’s a revised version of your function with explanations for each adjustment:
javascript
const handleSmartAdjust = () => {
  console.log("Smart Adjust triggered");
  toast({ title: "Smart Adjust Started", description: "Processing your resume..." });

  const resumeCopy = { ...resume };
  let contentAdjusted = false;

  // 1. Experience: Concise, prioritized, and professional
  const adjustedExperience = resumeCopy.experience.map(exp => {
    let newDescription = exp.description || '';
    if (newDescription.includes('•')) {
      const bullets = newDescription.split('•').filter(Boolean);
      const keptBullets = bullets.slice(0, Math.min(2, bullets.length)); // Limit to 2 bullets for brevity
      newDescription = keptBullets
        .map(bullet => {
          const trimmed = bullet.trim();
          return trimmed.length > 60 // Shorter max length for tight fit
            ? `• ${trimmed.substring(0, 55)}...`
            : `• ${trimmed}`;
        })
        .join('\n');
    } else {
      newDescription = newDescription.length > 100 // Slightly longer for non-bullets
        ? newDescription.substring(0, 95) + '...'
        : newDescription;
    }
    return { ...exp, description: newDescription };
  });
  const limitedExperience = adjustedExperience.slice(0, 3); // Max 3 experiences

  // 2. Education: Minimal but clear
  const adjustedEducation = resumeCopy.education.map(edu => {
    const description = edu.description || '';
    return {
      ...edu,
      description: description.length > 50 // Very short for education
        ? description.substring(0, 45) + '...'
        : description,
    };
  });
  const limitedEducation = adjustedEducation.slice(0, 2); // Max 2 entries

  // 3. Skills: Top 10, no proficiency sorting unless provided
  let adjustedSkills = [...resumeCopy.skills];
  if (adjustedSkills.length > 10) {
    adjustedSkills = adjustedSkills.slice(0, 10); // Limit to 10 for a tight fit
  }

  // 4. Summary: Crisp and professional
  let adjustedPersonalInfo = { ...resumeCopy.personalInfo };
  if (adjustedPersonalInfo.summary) {
    const maxSummaryLength = 200; // Short but readable summary
    adjustedPersonalInfo.summary =
      adjustedPersonalInfo.summary.length > maxSummaryLength
        ? adjustedPersonalInfo.summary.substring(0, 195) + '...'
        : adjustedPersonalInfo.summary;
  }

  // 5. Projects: Concise and limited
  const adjustedProjects = resumeCopy.projects
    ? resumeCopy.projects.map(proj => {
        const description = proj.description || '';
        return {
          ...proj,
          description: description.length > 80
            ? description.substring(0, 75) + '...'
            : description,
        };
      })
    : [];
  const limitedProjects = adjustedProjects.slice(0, 2); // Max 2 projects

  // 6. Dynamic Adjustments: Scale based on total content
  const totalLength =
    limitedExperience.join('').length +
    limitedEducation.join('').length +
    adjustedSkills.join('').length +
    (adjustedPersonalInfo.summary?.length || 0) +
    (limitedProjects.join('')?.length || 0);

  if (totalLength > 2000) { // Arbitrary threshold for "too long"
    // Further tighten if content is still excessive
    limitedExperience.forEach(exp => {
      exp.description = exp.description.split('\n').slice(0, 1).join('\n'); // 1 bullet max
    });
    adjustedPersonalInfo.summary = adjustedPersonalInfo.summary?.substring(0, 150) + '...';
  }

  // Apply changes
  const adjustedResume = {
    ...resumeCopy,
    experience: limitedExperience,
    education: limitedEducation,
    skills: adjustedSkills,
    projects: limitedProjects,
    personalInfo: adjustedPersonalInfo,
  };

  setResume(adjustedResume);
  toast({ title: "Smart Adjust Complete", description: "Your resume is now optimized for one page." });
};

Key Adjustments and Why They Work
Experience (Limited to 3, 2 Bullets Max):
Keeps only the most recent 3 roles, with each description limited to 2 concise bullet points (max 60 chars). This ensures relevance and saves space while maintaining a professional bullet-point format.

Non-bullet text is capped at 100 chars to allow slightly more detail where needed.
Education (Limited to 2, 50 Chars):
Education rarely needs much detail beyond degree and institution. A 50-char limit keeps it tight and professional (e.g., "BS in Computer Science, MIT").
Skills (Top 10):
Limits to 10 skills without sorting by proficiency (unless your data includes it). This assumes a flat list and avoids overcomplicating the logic, keeping the resume scannable.
Summary (200 Chars):
A 200-char summary forces a concise elevator pitch (e.g., "Software engineer with 5+ yrs exp in web dev and AI..."). It’s short but retains impact.
Projects (Limited to 2, 80 Chars):
Caps projects at 2 with brief descriptions. This highlights key accomplishments without overcrowding.
Dynamic Scaling:
If total content exceeds a threshold (e.g., 2000 chars), it further tightens bullet points to 1 per experience and shortens the summary. This ensures the resume adapts to varying content volumes.
Integration with Your Website Preview
To ensure this works with your website’s preview:
CSS Styling: Pair this with a CSS layout that uses a single-column design, small font size (e.g., 10-11pt), tight margins (e.g., 0.5in), and minimal padding. For example:
css
.resume-preview {
  font-size: 11pt;
  line-height: 1.2;
  margin: 0.5in;
  padding: 0;
  max-width: 8.5in;
  max-height: 11in;
  overflow: hidden;
}
Preview Update: Ensure setResume triggers a re-render of your preview component. Test with a sample resume to verify it fits within an 8.5x11in viewport.

Feedback Loop: The toast notifications already provide user feedback, but consider adding a visual indicator in the preview (e.g., a border flash) when adjusted.
Testing and Fine-Tuning
Test Cases: Try resumes with 5+ experiences, long descriptions, and many skills to see how the truncation behaves.

User Feedback: If users find truncated text too abrupt, adjust max lengths (e.g., increase bullet points to 70 chars).

Edge Cases: Handle empty sections (e.g., no projects) gracefully to avoid errors.
This configuration should give you a tightly packed, professional-looking resume that fits on one page in your website preview, balancing content reduction with readability. Let me know if you’d like to tweak specific thresholds or add more features!
